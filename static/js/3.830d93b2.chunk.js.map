{"version":3,"sources":["components/header/index.js","constants/colors.js","components/loader/index.js","scenes/random.js","scenes/room.js","components/display/index.js","scenes/index.js","App.js","serviceWorker.js","bootstrap.js","../../wasm/pkg/ray_tracer_wasm.js","icons/play.svg","icons/stop.svg","icons/pause.svg","../../wasm/pkg sync"],"names":["header","react_default","a","createElement","className","style","backgroundColor","color","loader","_ref","sceneName","gamma","resolution","reflections","onParamChange","onStart","loading","position","textAlign","href","target","value","onChange","e","concat","disabled","onClick","src","PlayIcon","random","aspect","scene","Scene","new","set_background","i","j","radius","Math","x","y","hitable","Hitable","sphere","translation","l","cube","texture","Texture","uniform","materialRand","material","Material","lambertian","fuzziness","metal","n","dielectric","actor","Actor","add_actor","Float64Array","texture0","texture1","checker","plain","camera","Camera","set_aspect","set_fov","PI","set_position","set_lookat","set_up","set_tree_type","room","rectangle","height","width","length","set_direction","DisplayComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","computePixel","index","Promise","resolve","floor","renderer","render_pixel","mainLoop","iteration","pause","maxIteration","previewRenderer","stop","min","chunkSize","k","updateImage","updateCanvas","image","newIndex","newIteration","currentIndex","requestAnimationFrame","onPause","setState","state","onStop","_this$props","_createScene","name","randomScene","roomScene","createScene","Renderer","canvas","document","context","getContext","imageData","createImageData","imageElement","toDataURL","frac","max","data","gammaInv","pow","putImageData","_this2","maxWidth","left","top","transform","ref","marginRight","PauseIcon","StopIcon","Component","App","loaded","key","_this$state","display","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","d","__webpack_exports__","__wbg_new_d87f272aec784ec0","__wbg_call_eae29933372a39be","__wbg_self_e0b3266d2d9eba1a","__wbg_crypto_e95a6e54c5c2e37f","__wbg_getRandomValues_dc67302a7bd1aec5","__wbg_getRandomValues_02639197c8166a96","__wbg_require_0993fe224bf8e202","__wbg_randomFillSync_dd2297de5917c74e","__wbindgen_object_drop_ref","__wbindgen_is_undefined","__wbindgen_jsval_eq","__wbindgen_throw","_home_alessandro_Software_rust_ray_tracer_app_client_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_alessandro_Software_rust_ray_tracer_app_client_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_ray_tracer_wasm_bg__WEBPACK_IMPORTED_MODULE_2__","cachegetFloat64Memory","getFloat64Memory","buffer","WASM_VECTOR_LEN","passArrayF64ToWasm","arg","ptr","set","cachedTextDecoder","TextDecoder","cachegetUint8Memory","getUint8Memory","Uint8Array","getStringFromWasm","len","decode","subarray","heap","Array","fill","undefined","push","heap_next","addHeapObject","obj","idx","arg0","arg1","varg0","Function","getObject","self","crypto","getRandomValues","getArrayU8FromWasm","arg2","varg1","randomFillSync","b","freeHitable","create","prototype","__wrap","arg3","ptr0","ptr1","len1","freeCamera","len0","freeActor","freeRenderer","ptr2","len2","arg4","ptr4","len4","freeScene","freeTexture","freeMaterial","Error","module","exports","p","webpackEmptyContext","req","code","keys","id"],"mappings":"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","file":"static/js/3.830d93b2.chunk.js","sourcesContent":["import React from 'react';\n\nimport { PRIMARY, PRIMARY_TEXT } from '../../constants/colors';\n\nexport default () => {\n  return (\n    <div className=\"header\" style={{backgroundColor: PRIMARY, color: PRIMARY_TEXT}}>\n      Ray Tracer\n    </div>\n  )\n}\n","export const BACKGROUND = \"#F5F5F5\";\n\nexport const PRIMARY = \"#3f51b5\";\nexport const PRIMARY_LIGHT = \"#757de8\";\nexport const PRIMARY_DARK = \"#002984\";\nexport const PRIMARY_TEXT = \"#ffffff\";\n\nexport const SECONDARY = \"#9c27b0\";\nexport const SECONDARY_LIGHT = \"#d05ce3\";\nexport const SECONDARY_DARK = \"#6a0080\";\nexport const SECONDARY_TEXT = \"#ffffff\";\n","import React from 'react';\n\nimport { BACKGROUND, PRIMARY, PRIMARY_LIGHT, PRIMARY_TEXT } from '../../constants/colors';\n\nimport PlayIcon from '../../icons/play.svg';\n\nexport default ({ sceneName, gamma, resolution, reflections, onParamChange, onStart, loading }) => {\n  return (\n    <div className=\"full\" style={{backgroundColor: BACKGROUND, position: 'relative'}}>\n      <div className=\"content\" style={{textAlign: 'center'}}>\n        <h2>\n          Rust + WebAssembly Path Tracer\n        </h2>\n\n        <h3>\n          Author\n        </h3>\n        <span>\n          Alessandro Genova\n        </span>\n\n        <h3>\n          Core Library\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/ray-tracer\" target=\"_blank\">Source</a>\n          <br/>\n          (rust)\n        </span>\n\n        <h3>\n          Demo App\n        </h3>\n        <span>\n          <a href=\"https://github.com/alesgenova/ray-tracer-app\" target=\"_blank\">Source</a>\n          <br/>\n          (wasm, react)\n        </span>\n\n        <br/>\n\n        <h3>\n          Scene\n        </h3>\n        <select value={sceneName} onChange={(e) => {onParamChange('sceneName', e.target.value)}}>\n          <option value=\"random\">Random</option>\n          <option value=\"room\">Room</option>\n        </select>\n\n        <h3>\n          Resolution\n        </h3>\n        <select value={resolution} onChange={(e) => {onParamChange('resolution', e.target.value)}}>\n          <option value={10}>{`${10 * 16} x ${10 * 9}`}</option>\n          <option value={20}>{`${20 * 16} x ${20 * 9}`}</option>\n          <option value={40}>{`${40 * 16} x ${40 * 9}`}</option>\n          <option value={80}>{`${80 * 16} x ${80 * 9}`}</option>\n        </select>\n\n        <h3>\n          Reflections\n        </h3>\n        <select value={reflections} onChange={(e) => {onParamChange('reflections', e.target.value)}}>\n          <option value={2}>2</option>\n          <option value={4}>4</option>\n          <option value={8}>8</option>\n          <option value={16}>16</option>\n        </select>\n\n        <h3>\n          Gamma\n        </h3>\n        <select value={gamma} onChange={(e) => {onParamChange('gamma', e.target.value)}}>\n          <option value={1.0}>1.0</option>\n          <option value={1.5}>1.5</option>\n          <option value={2.0}>2.0</option>\n          <option value={2.5}>2.5</option>\n          <option value={3.0}>3.0</option>\n        </select>\n      </div>\n\n      <div className=\"floating-container-center\">\n        <button\n          disabled={loading}\n          onClick={onStart}\n          className=\"floating-button-large\"\n          style={{backgroundColor: loading ? PRIMARY_LIGHT : PRIMARY, color: PRIMARY_TEXT}}\n        >\n          <ion-icon src={PlayIcon}/>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import {\n  Actor,\n  Hitable,\n  Camera,\n  Material,\n  Texture,\n  Scene\n} from 'ray-tracer-wasm';\n\nexport default function(aspect) {\n  let scene = Scene.new();\n  // scene.set_background([0.5, 0.7, 0.9]);\n  scene.set_background([0.25, 0.35, 0.45]);\n\n  const N_SPHERES_X = 20;\n  const N_SPHERES_Y = N_SPHERES_X;\n\n  const MIN_X = -25.0;\n  const MAX_X = 25.0;\n\n  const MIN_Y = MIN_X;\n  const MAX_Y = MAX_X;\n\n  const MIN_RADIUS = 0.2;\n  const MAX_RADIUS = 0.4;\n\n  const SPHERE_PROBABILITY = 0.66666666;\n\n  const LAMBERTIAN_PROBABILITY = 0.3333;\n  const METAL_PROBABILITY = 0.3333;\n  // DIELECTRIC_PROBABILITY is 1 - LAMBERTIAN_PROBABILITY - METAL_PROBABILITY\n\n  const MIN_FUZZINESS = 0.0;\n  const MAX_FUZZINESS = 0.2;\n\n  const MIN_REFRACTIVE = 1.2;\n  const MAX_REFRACTIVE = 2.4;\n\n  for (let i = 0; i < N_SPHERES_X; ++i) {\n    for (let j = 0; j < N_SPHERES_Y; ++j) {\n      let radius = MIN_RADIUS + (MAX_RADIUS - MIN_RADIUS) * Math.random();\n      let x = i + Math.random() * (1.0 - radius);\n      x = MIN_X + (MAX_X - MIN_X) * x / N_SPHERES_X;\n      let y = j + Math.random() * (1.0 - radius);\n      y = MIN_Y + (MAX_Y - MIN_Y) * y / N_SPHERES_Y;\n\n      let hitableRand = Math.random();\n      let hitable;\n      if (hitableRand < SPHERE_PROBABILITY) {\n        hitable = Hitable.sphere(radius);\n        hitable = Hitable.translation(hitable, [x, y, radius]);\n      } else {\n        let l = radius * 2.0 * 0.75;\n        hitable = Hitable.cube(l, l, l);\n        hitable = Hitable.translation(hitable, [x, y, radius * 0.75]);\n      }\n\n      let color = [Math.random(), Math.random(), Math.random()];\n      let texture = Texture.uniform(color);\n\n      let materialRand = Math.random();\n      let material;\n      if (materialRand < LAMBERTIAN_PROBABILITY) {\n        material = Material.lambertian(texture, 0.65);\n      } else if (materialRand < METAL_PROBABILITY) {\n        let fuzziness = MIN_FUZZINESS + (MAX_FUZZINESS - MIN_FUZZINESS) * Math.random();\n        material = Material.metal(texture, fuzziness);\n      } else {\n        let n = MIN_REFRACTIVE + (MAX_REFRACTIVE - MIN_REFRACTIVE) * Math.random();\n        material = Material.dielectric(texture, n);\n      }\n\n      let actor = Actor.new(hitable, material);\n      scene.add_actor(actor);\n    }\n  }\n\n  let radius = 2.0;\n  {\n  let hitable = Hitable.sphere(radius);\n  hitable = Hitable.translation(hitable, [0.0, 0.0, radius]);\n  let color = new Float64Array([0.85, 1.0, 0.85]);\n  let texture = Texture.uniform(color);\n  let material = Material.dielectric(texture, 2.4);\n  let actor = Actor.new(hitable, material);\n  scene.add_actor(actor);\n  }\n\n  {\n  let hitable = Hitable.sphere(radius);\n  hitable = Hitable.translation(hitable, [0.0, - 2.1 * radius, radius]);\n  let color = new Float64Array([0.9, 0.9, 0.9]);\n  let texture = Texture.uniform(color);\n  let material = Material.metal(texture, 0.00001);\n  let actor = Actor.new(hitable, material);\n  scene.add_actor(actor);\n  }\n\n  {\n  let hitable = Hitable.sphere(radius);\n  hitable = Hitable.translation(hitable, [0.0, 2.1 * radius, radius]);\n  let color = new Float64Array([1.0, 0.25, 0.25]);\n  let texture = Texture.uniform(color);\n  let material = Material.metal(texture, 0.05);\n  let actor = Actor.new(hitable, material);\n  scene.add_actor(actor);\n  }\n\n  // Floor\n  {\n  let radius = 4000.0\n  let hitable = Hitable.sphere(radius);\n  hitable = Hitable.translation(hitable, [0.0, 0.0, -radius]);\n  let texture0 = Texture.uniform([1.0, 1.0, 1.0]);\n  let texture1 = Texture.uniform([0.85, 0.85, 0.85]);\n  let texture = Texture.checker(texture0, texture1);\n  let material = Material.lambertian(texture, 0.7);\n  let actor = Actor.new(hitable, material);\n  scene.add_actor(actor);\n  }\n\n  // Light\n  {\n  let hitable = Hitable.sphere(4.0);\n  hitable = Hitable.translation(hitable, [0.0, 5.0, 15.2]);\n  let color = new Float64Array([1.0, 1.0, 1.0]);\n  let texture = Texture.uniform(color);\n  let material = Material.plain(texture);\n  let actor = Actor.new(hitable, material);\n  scene.add_actor(actor);\n  }\n\n  let camera = Camera.new();\n  camera.set_aspect(aspect);\n  camera.set_fov(Math.PI * 0.25);\n  camera.set_position(new Float64Array([-6.0, -10.0, 2.0]));\n  camera.set_lookat(new Float64Array([0.0, 0.0, 2.0]));\n  camera.set_up(new Float64Array([0.0, 0.0, 1.0]));\n\n  scene.set_tree_type(2);\n  return { scene, camera };\n}\n","import {\n  Actor,\n  Hitable,\n  Camera,\n  Material,\n  Texture,\n  Scene\n} from 'ray-tracer-wasm';\n\nexport default function(aspect) {\n  let scene = Scene.new();\n  // scene.set_background([0.5, 0.5, 0.5]);\n\n  let length = 16;\n  let width = 16;\n  let height = 9;\n\n  let dimming = 0.75;\n\n  // Floor\n  {\n    let hitable = Hitable.rectangle(length, 0, width, 1);\n    hitable = Hitable.translation(hitable, [0.0, 0.0, -height / 2.0]);\n    let texture0 = Texture.uniform([1.0, 1.0, 1.0]);\n    let texture1 = Texture.uniform([0.8, 0.8, 0.8]);\n    let texture = Texture.checker(texture0, texture1);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Ceiling\n  {\n    let hitable = Hitable.rectangle(width, 1, length, 0);\n    hitable = Hitable.translation(hitable, [0.0, 0.0, height / 2.0]);\n    let texture = Texture.uniform([1.0, 1.0, 1.0]);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Front\n  {\n    let hitable = Hitable.rectangle(length, 0, height, 2);\n    hitable = Hitable.translation(hitable, [0.0, width / 2.0, 0.0]);\n    let texture = Texture.uniform([1.0, 1.0, 1.0]);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Back\n  {\n    let hitable = Hitable.rectangle(height, 2, length, 0);\n    hitable = Hitable.translation(hitable, [0.0, - width / 2.0, 0.0]);\n    let texture = Texture.uniform([1.0, 1.0, 1.0]);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Left\n  {\n    let hitable = Hitable.rectangle(width, 1, height, 2);\n    hitable = Hitable.translation(hitable, [-length / 2.0, 0.0, 0.0]);\n    let texture = Texture.uniform([0.2, 1.0, 0.2]);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Right\n  {\n    let hitable = Hitable.rectangle(height, 2, width, 1);\n    hitable = Hitable.translation(hitable, [length / 2.0, 0.0, 0.0]);\n    let texture = Texture.uniform([1.0, 0.2, 0.2]);\n    let material = Material.lambertian(texture, dimming);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Light\n  let lightSize = length * 0.25;\n  {\n    let hitable = Hitable.cube(lightSize, lightSize, 0.125 * lightSize);\n    hitable = Hitable.translation(hitable, [0.0, width / 4.0, height / 2.0]);\n    let texture = Texture.uniform([1.0, 1.0, 1.0]);\n    let material = Material.plain(texture);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Metal sphere\n  {\n    let radius = 2.0\n    let hitable = Hitable.sphere(radius);\n    hitable = Hitable.translation(hitable, [-length / 5.0, width / 4, - 0.5 * height + radius]);\n    let texture = Texture.uniform([0.9, 0.9, 0.9]);\n    let material = Material.metal(texture, 0.0);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  // Glass sphere\n  {\n    let radius = 2.0\n    let hitable = Hitable.sphere(radius);\n    hitable = Hitable.translation(hitable, [length / 5.0, width / 6.0, - 0.5 * height + radius]);\n    let texture = Texture.uniform([1.0, 1.0, 1.0]);\n    let material = Material.dielectric(texture, 2.4);\n    let actor = Actor.new(hitable, material);\n    scene.add_actor(actor);\n  }\n\n  let camera = Camera.new();\n  camera.set_aspect(aspect);\n  camera.set_fov(Math.PI * 0.35);\n  camera.set_position([0.0, - 0.49 * width, 0.0]);\n  camera.set_direction([0.0, 1.0, 0.0]);\n  camera.set_up([0.0, 0.0, 1.0]);\n\n  scene.set_tree_type(2);\n  return { scene, camera };\n}\n","import React, { Component } from 'react';\n\nimport { BACKGROUND, SECONDARY, SECONDARY_LIGHT, SECONDARY_TEXT, PRIMARY_LIGHT } from '../../constants/colors';\n\nimport StopIcon from '../../icons/stop.svg';\nimport PauseIcon from '../../icons/pause.svg';\nimport PlayIcon from '../../icons/play.svg';\n\nimport { createScene } from '../../scenes';\nimport { Renderer } from 'ray-tracer-wasm';\n\nclass DisplayComponent extends Component {\n\n  canvas;\n  context;\n  imageData;\n  scene;\n  camera;\n  renderer;\n  previewRenderer;\n  width;\n  height;\n  imageElement;\n  pause;\n\n  iteration;\n  currentIndex;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pause: false\n    }\n  }\n\n  componentDidMount() {\n\n    const {\n      width, height,\n      sceneName,\n      reflections\n    } = this.props;\n\n    this.pause = false;\n\n    this.width = width;\n    this.height = height;\n\n    let aspect = width / height;\n    let { scene, camera } = createScene(sceneName, aspect);\n    this.scene = scene;\n    this.camera = camera;\n    this.previewRenderer = Renderer.new(width, height, 0, 0, false);\n    this.renderer = Renderer.new(width, height, 0, reflections, false);\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    this.context = this.canvas.getContext('2d');\n    this.imageData = this.context.createImageData(this.width, this.height);\n    this.imageElement.src = this.canvas.toDataURL();\n\n    this.image = new Float64Array(this.width * this.height * 3);\n\n    this.chunkSize = 1000;\n\n    this.maxIteration = 256;\n\n    this.mainLoop(0, -1);\n  }\n\n  componentDidUpdate() {\n    this.context = this.canvas.getContext('2d');\n    this.imageData = this.context.createImageData(this.width, this.height);\n  }\n\n  componentWillUnmount() {\n    this.pause = true;\n  }\n\n  computePixel = (index) => {\n    return new Promise((resolve) => {\n      let color = new Float64Array(3);\n      let i = Math.floor(index / this.width);\n      let j = index % this.width;\n      this.renderer.render_pixel(j, i, this.scene, this.camera, color);\n      resolve({i, j, color});\n    });\n  }\n\n  mainLoop = (index, iteration) => {\n    if (this.pause || iteration > this.maxIteration) {\n      return;\n    }\n\n    let renderer = this.renderer;\n    if (iteration < 0) {\n      renderer = this.previewRenderer;\n    }\n\n    let color = new Float64Array(3);\n    const stop = Math.min(this.width * this.height, index + this.chunkSize);\n    for (let k = index; k < stop; ++k) {\n      let i = Math.floor(k / this.width);\n      let j = k % this.width;\n      renderer.render_pixel(j, i, this.scene, this.camera, color);\n      this.updateImage(k, iteration, color);\n    }\n\n    this.updateCanvas(this.image);\n    \n    let newIndex = stop;\n    let newIteration = iteration;\n    if (stop === this.width * this.height) {\n      newIndex = 0;\n      newIteration += 1;\n    }\n\n    this.currentIndex = stop;\n    this.iteration = newIteration;\n\n    requestAnimationFrame(() => {\n      this.mainLoop(newIndex, newIteration);\n    });\n  }\n\n  updateImage(index, iteration, color) {\n    iteration = Math.max(0, iteration);\n    let frac = 1 / (iteration + 1);\n    for (let i = 0; i < 3; ++i) {\n      this.image[index * 3 + i] = (1 - frac) * this.image[index * 3 + i] + frac * color[i];\n    }\n  }\n\n  updateCanvas(data) {\n    const { gamma } = this.props;\n    let gammaInv = 1 / gamma;\n    for (let i = 0; i < this.width * this.height; ++i) {\n      this.imageData.data[i * 4] = Math.pow(data[i * 3], gammaInv) * 255;\n      this.imageData.data[i * 4 + 1] = Math.pow(data[i * 3 + 1], gammaInv) * 255;\n      this.imageData.data[i * 4 + 2] = Math.pow(data[i * 3 + 2], gammaInv) * 255;\n      this.imageData.data[i * 4 + 3] = 255;\n    }\n    this.context.putImageData(this.imageData, 0, 0);\n    this.imageElement.src = this.canvas.toDataURL();\n  }\n\n  onPause = () => {\n    const pause = this.pause;\n\n    this.pause = !pause;\n    if (pause) {\n      this.mainLoop(this.currentIndex, this.iteration);\n    }\n\n    this.setState(state => {\n      state.pause = !pause;\n      return state;\n    });\n  }\n\n  onStop = () => {\n\n  }\n\n  render() {\n    const { onStop } = this.props;\n    const { pause } = this.state;\n\n    return (\n      <div className=\"full\" style={{position: 'relative'}}>\n        <div style={{width: '100%', maxWidth: '75rem', position: 'absolute', left: '50%', top: '2rem', transform: 'translateX(-50%)'}}>\n          <div style={{width: '100%'}}>\n            <img style={{width: '100%'}} ref={ref => {this.imageElement = ref;}}/>\n          </div>\n        </div>\n        <div className=\"floating-container-center\">\n          <button\n            onClick={this.onPause}\n            className=\"floating-button-large\"\n            style={{backgroundColor: PRIMARY_LIGHT, color: SECONDARY_TEXT, marginRight: '1rem'}}\n          >\n            <ion-icon src={pause ? PlayIcon : PauseIcon}/>\n          </button>\n          <button\n            onClick={onStop}\n            className=\"floating-button-large\"\n            style={{backgroundColor: SECONDARY, color: SECONDARY_TEXT}}\n          >\n            <ion-icon src={StopIcon}/>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DisplayComponent;\n","import randomScene from './random';\nimport roomScene from './room';\n\nexport function createScene(name, aspect) {\n  if (name === 'random') {\n    return randomScene(aspect);\n  } else {\n    return roomScene(aspect);\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport HeaderComponent from './components/header';\nimport LoaderComponent from './components/loader';\nimport DisplayComponent from './components/display';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sceneName: 'random',\n      resolution: 20,\n      reflections: 8,\n      loading: false,\n      loaded: false,\n      gamma: 2.0\n    }\n  }\n\n  onStart = () => {\n    this.setState(state => {\n      state.loading = false;\n      state.loaded = true;\n      return state;\n    });\n  }\n\n  onStop = () => {\n    this.setState(state => {\n      state.loading = false;\n      state.loaded = false;\n      return state;\n    })\n  }\n\n  onParamChange = (key, value) => {\n    this.setState(state => {\n      state[key] = value;\n      return state;\n    })\n  }\n\n  render() {\n    const { sceneName, resolution, reflections, gamma, loaded, loading } = this.state;\n\n    return (\n      <div className=\"app\">\n        <HeaderComponent />\n\n        <div className=\"content-container\">\n          \n          {!loaded &&\n          <LoaderComponent\n            sceneName={sceneName}\n            resolution={resolution}\n            reflections={reflections}\n            gamma={gamma}\n            onParamChange={this.onParamChange}\n            onStart={this.onStart}\n            loading={loading}\n          />\n          }\n\n          {loaded &&\n          <DisplayComponent\n            sceneName={sceneName}\n            width={resolution * 16}\n            height={resolution * 9}\n            reflections={reflections}\n            gamma={gamma}\n            onStop={this.onStop}\n          />       \n          }\n        \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import _classCallCheck from \"/home/alessandro/Software/rust/ray-tracer-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alessandro/Software/rust/ray-tracer-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/* tslint:disable */\nimport * as wasm from './ray_tracer_wasm_bg';\nvar cachegetFloat64Memory = null;\n\nfunction getFloat64Memory() {\n  if (cachegetFloat64Memory === null || cachegetFloat64Memory.buffer !== wasm.memory.buffer) {\n    cachegetFloat64Memory = new Float64Array(wasm.memory.buffer);\n  }\n\n  return cachegetFloat64Memory;\n}\n\nvar WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm(arg) {\n  var ptr = wasm.__wbindgen_malloc(arg.length * 8);\n\n  getFloat64Memory().set(arg, ptr / 8);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nvar cachedTextDecoder = new TextDecoder('utf-8');\nvar cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nvar heap = new Array(32);\nheap.fill(undefined);\nheap.push(undefined, null, true, false);\nvar heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  var idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nexport function __wbg_new_d87f272aec784ec0(arg0, arg1) {\n  var varg0 = getStringFromWasm(arg0, arg1);\n  return addHeapObject(new Function(varg0));\n}\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nexport function __wbg_call_eae29933372a39be(arg0, arg1) {\n  return addHeapObject(getObject(arg0).call(getObject(arg1)));\n}\nexport function __wbg_self_e0b3266d2d9eba1a(arg0) {\n  return addHeapObject(getObject(arg0).self);\n}\nexport function __wbg_crypto_e95a6e54c5c2e37f(arg0) {\n  return addHeapObject(getObject(arg0).crypto);\n}\nexport function __wbg_getRandomValues_dc67302a7bd1aec5(arg0) {\n  return addHeapObject(getObject(arg0).getRandomValues);\n}\n\nfunction getArrayU8FromWasm(ptr, len) {\n  return getUint8Memory().subarray(ptr / 1, ptr / 1 + len);\n}\n\nexport function __wbg_getRandomValues_02639197c8166a96(arg0, arg1, arg2) {\n  var varg1 = getArrayU8FromWasm(arg1, arg2);\n  getObject(arg0).getRandomValues(varg1);\n}\nexport function __wbg_require_0993fe224bf8e202(arg0, arg1) {\n  var varg0 = getStringFromWasm(arg0, arg1);\n  return addHeapObject(require(varg0));\n}\nexport function __wbg_randomFillSync_dd2297de5917c74e(arg0, arg1, arg2) {\n  var varg1 = getArrayU8FromWasm(arg1, arg2);\n  getObject(arg0).randomFillSync(varg1);\n}\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nexport function __wbindgen_object_drop_ref(i) {\n  dropObject(i);\n}\nexport function __wbindgen_is_undefined(idx) {\n  return getObject(idx) === undefined ? 1 : 0;\n}\nexport function __wbindgen_jsval_eq(a, b) {\n  return getObject(a) === getObject(b) ? 1 : 0;\n}\n\nfunction freeHitable(ptr) {\n  wasm.__wbg_hitable_free(ptr);\n}\n/**\n*/\n\n\nexport var Hitable =\n/*#__PURE__*/\nfunction () {\n  function Hitable() {\n    _classCallCheck(this, Hitable);\n  }\n\n  _createClass(Hitable, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeHitable(ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @returns {Hitable}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Hitable.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"sphere\",\n    value: function sphere(arg0) {\n      return Hitable.__wrap(wasm.hitable_sphere(arg0));\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @returns {Hitable}\n    */\n\n  }, {\n    key: \"cube\",\n    value: function cube(arg0, arg1, arg2) {\n      return Hitable.__wrap(wasm.hitable_cube(arg0, arg1, arg2));\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @returns {Hitable}\n    */\n\n  }, {\n    key: \"rectangle\",\n    value: function rectangle(arg0, arg1, arg2, arg3) {\n      return Hitable.__wrap(wasm.hitable_rectangle(arg0, arg1, arg2, arg3));\n    }\n    /**\n    * @param {Hitable} arg0\n    * @param {Float64Array} arg1\n    * @returns {Hitable}\n    */\n\n  }, {\n    key: \"translation\",\n    value: function translation(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      var ptr1 = passArrayF64ToWasm(arg1);\n      var len1 = WASM_VECTOR_LEN;\n\n      try {\n        return Hitable.__wrap(wasm.hitable_translation(ptr0, ptr1, len1));\n      } finally {\n        wasm.__wbindgen_free(ptr1, len1 * 8);\n      }\n    }\n  }]);\n\n  return Hitable;\n}();\n\nfunction freeCamera(ptr) {\n  wasm.__wbg_camera_free(ptr);\n}\n/**\n*/\n\n\nexport var Camera =\n/*#__PURE__*/\nfunction () {\n  function Camera() {\n    _classCallCheck(this, Camera);\n  }\n\n  _createClass(Camera, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeCamera(ptr);\n    }\n    /**\n    * @returns {Camera}\n    */\n\n  }, {\n    key: \"set_aspect\",\n\n    /**\n    * @param {number} arg0\n    * @returns {void}\n    */\n    value: function set_aspect(arg0) {\n      return wasm.camera_set_aspect(this.ptr, arg0);\n    }\n    /**\n    * @param {number} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_fov\",\n    value: function set_fov(arg0) {\n      return wasm.camera_set_fov(this.ptr, arg0);\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_position\",\n    value: function set_position(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.camera_set_position(this.ptr, ptr0, len0);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_direction\",\n    value: function set_direction(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.camera_set_direction(this.ptr, ptr0, len0);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_lookat\",\n    value: function set_lookat(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.camera_set_lookat(this.ptr, ptr0, len0);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_up\",\n    value: function set_up(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.camera_set_up(this.ptr, ptr0, len0);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Camera.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new() {\n      return Camera.__wrap(wasm.camera_new());\n    }\n  }]);\n\n  return Camera;\n}();\n\nfunction freeActor(ptr) {\n  wasm.__wbg_actor_free(ptr);\n}\n/**\n*/\n\n\nexport var Actor =\n/*#__PURE__*/\nfunction () {\n  function Actor() {\n    _classCallCheck(this, Actor);\n  }\n\n  _createClass(Actor, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeActor(ptr);\n    }\n    /**\n    * @param {Hitable} arg0\n    * @param {Material} arg1\n    * @returns {Actor}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Actor.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      var ptr1 = arg1.ptr;\n      arg1.ptr = 0;\n      return Actor.__wrap(wasm.actor_new(ptr0, ptr1));\n    }\n  }]);\n\n  return Actor;\n}();\n\nfunction freeRenderer(ptr) {\n  wasm.__wbg_renderer_free(ptr);\n}\n/**\n*/\n\n\nexport var Renderer =\n/*#__PURE__*/\nfunction () {\n  function Renderer() {\n    _classCallCheck(this, Renderer);\n  }\n\n  _createClass(Renderer, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeRenderer(ptr);\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {number} arg2\n    * @param {number} arg3\n    * @param {boolean} arg4\n    * @returns {Renderer}\n    */\n\n  }, {\n    key: \"render\",\n\n    /**\n    * @param {Scene} arg0\n    * @param {Camera} arg1\n    * @param {Float64Array} arg2\n    * @returns {void}\n    */\n    value: function render(arg0, arg1, arg2) {\n      var ptr2 = passArrayF64ToWasm(arg2);\n      var len2 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.renderer_render(this.ptr, arg0.ptr, arg1.ptr, ptr2, len2);\n      } finally {\n        arg2.set(getFloat64Memory().subarray(ptr2 / 8, ptr2 / 8 + len2));\n\n        wasm.__wbindgen_free(ptr2, len2 * 8);\n      }\n    }\n    /**\n    * @param {number} arg0\n    * @param {number} arg1\n    * @param {Scene} arg2\n    * @param {Camera} arg3\n    * @param {Float64Array} arg4\n    * @returns {void}\n    */\n\n  }, {\n    key: \"render_pixel\",\n    value: function render_pixel(arg0, arg1, arg2, arg3, arg4) {\n      var ptr4 = passArrayF64ToWasm(arg4);\n      var len4 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.renderer_render_pixel(this.ptr, arg0, arg1, arg2.ptr, arg3.ptr, ptr4, len4);\n      } finally {\n        arg4.set(getFloat64Memory().subarray(ptr4 / 8, ptr4 / 8 + len4));\n\n        wasm.__wbindgen_free(ptr4, len4 * 8);\n      }\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Renderer.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new(arg0, arg1, arg2, arg3, arg4) {\n      return Renderer.__wrap(wasm.renderer_new(arg0, arg1, arg2, arg3, arg4));\n    }\n  }]);\n\n  return Renderer;\n}();\n\nfunction freeScene(ptr) {\n  wasm.__wbg_scene_free(ptr);\n}\n/**\n*/\n\n\nexport var Scene =\n/*#__PURE__*/\nfunction () {\n  function Scene() {\n    _classCallCheck(this, Scene);\n  }\n\n  _createClass(Scene, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeScene(ptr);\n    }\n    /**\n    * @returns {Scene}\n    */\n\n  }, {\n    key: \"add_actor\",\n\n    /**\n    * @param {Actor} arg0\n    * @returns {void}\n    */\n    value: function add_actor(arg0) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      return wasm.scene_add_actor(this.ptr, ptr0);\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_background\",\n    value: function set_background(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return wasm.scene_set_background(this.ptr, ptr0, len0);\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n    /**\n    * @param {number} arg0\n    * @returns {void}\n    */\n\n  }, {\n    key: \"set_tree_type\",\n    value: function set_tree_type(arg0) {\n      return wasm.scene_set_tree_type(this.ptr, arg0);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Scene.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"new\",\n    value: function _new() {\n      return Scene.__wrap(wasm.scene_new());\n    }\n  }]);\n\n  return Scene;\n}();\n\nfunction freeTexture(ptr) {\n  wasm.__wbg_texture_free(ptr);\n}\n/**\n*/\n\n\nexport var Texture =\n/*#__PURE__*/\nfunction () {\n  function Texture() {\n    _classCallCheck(this, Texture);\n  }\n\n  _createClass(Texture, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeTexture(ptr);\n    }\n    /**\n    * @param {Float64Array} arg0\n    * @returns {Texture}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Texture.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"uniform\",\n    value: function uniform(arg0) {\n      var ptr0 = passArrayF64ToWasm(arg0);\n      var len0 = WASM_VECTOR_LEN;\n\n      try {\n        return Texture.__wrap(wasm.texture_uniform(ptr0, len0));\n      } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 8);\n      }\n    }\n    /**\n    * @param {Texture} arg0\n    * @param {Texture} arg1\n    * @returns {Texture}\n    */\n\n  }, {\n    key: \"checker\",\n    value: function checker(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      var ptr1 = arg1.ptr;\n      arg1.ptr = 0;\n      return Texture.__wrap(wasm.texture_checker(ptr0, ptr1));\n    }\n  }]);\n\n  return Texture;\n}();\n\nfunction freeMaterial(ptr) {\n  wasm.__wbg_material_free(ptr);\n}\n/**\n*/\n\n\nexport var Material =\n/*#__PURE__*/\nfunction () {\n  function Material() {\n    _classCallCheck(this, Material);\n  }\n\n  _createClass(Material, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n      freeMaterial(ptr);\n    }\n    /**\n    * @param {Texture} arg0\n    * @returns {Material}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Material.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }, {\n    key: \"plain\",\n    value: function plain(arg0) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      return Material.__wrap(wasm.material_plain(ptr0));\n    }\n    /**\n    * @param {Texture} arg0\n    * @param {number} arg1\n    * @returns {Material}\n    */\n\n  }, {\n    key: \"lambertian\",\n    value: function lambertian(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      return Material.__wrap(wasm.material_lambertian(ptr0, arg1));\n    }\n    /**\n    * @param {Texture} arg0\n    * @param {number} arg1\n    * @returns {Material}\n    */\n\n  }, {\n    key: \"metal\",\n    value: function metal(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      return Material.__wrap(wasm.material_metal(ptr0, arg1));\n    }\n    /**\n    * @param {Texture} arg0\n    * @param {number} arg1\n    * @returns {Material}\n    */\n\n  }, {\n    key: \"dielectric\",\n    value: function dielectric(arg0, arg1) {\n      var ptr0 = arg0.ptr;\n      arg0.ptr = 0;\n      return Material.__wrap(wasm.material_dielectric(ptr0, arg1));\n    }\n  }]);\n\n  return Material;\n}();\nexport function __wbindgen_throw(ptr, len) {\n  throw new Error(getStringFromWasm(ptr, len));\n}","module.exports = __webpack_public_path__ + \"static/media/play.7674a1b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.292a58fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.ec5c6800.svg\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 23;"],"sourceRoot":""}